name: Cleanup Artifacts (Master Only)

on:
  schedule:
    - cron: '59 23 * * *'  # Every day at 11:59 PM UTC
  push:
    paths:
      - '.github/workflows/cleanup-artifacts.yaml'

jobs:
  cleanup:
    runs-on: ubuntu-latest
    permissions:
      actions: write
      contents: write
    steps:
      - name: Find latest successful run for master
        id: latest_run
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const runs = await github.rest.actions.listWorkflowRunsForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              branch: "master",
              status: "success",
              per_page: 1
            });
            if (runs.data.workflow_runs.length > 0) {
              core.setOutput("run_id", runs.data.workflow_runs[0].id);
            } else {
              core.setOutput("run_id", "");
            }

      - name: Delete artifacts except for latest successful master run and log details
        id: cleanup
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const runId = process.env.RUN_ID;
            const artifacts = await github.rest.actions.listArtifactsForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo
            });

            let totalCleaned = 0;
            let deletedArtifacts = [];
            for (const artifact of artifacts.data.artifacts) {
              if (runId && String(artifact.workflow_run.id) !== String(runId)) {
                await github.rest.actions.deleteArtifact({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  artifact_id: artifact.id
                });
                totalCleaned += artifact.size_in_bytes;
                deletedArtifacts.push({ name: artifact.name, size: artifact.size_in_bytes });
                console.log(`[CLEANUP] Deleted artifact: ${artifact.name} (${(artifact.size_in_bytes / (1024*1024)).toFixed(2)} MB)`);
              }
            }
            console.log(`[CLEANUP] Total space cleaned: ${(totalCleaned / (1024*1024)).toFixed(2)} MB`);
            core.setOutput("total_cleaned", totalCleaned);

            // Get remaining artifacts for space left
            const remainingArtifacts = await github.rest.actions.listArtifactsForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo
            });
            let totalLeft = 0;
            for (const artifact of remainingArtifacts.data.artifacts) {
              totalLeft += artifact.size_in_bytes;
            }
            console.log(`[CLEANUP] Total space used by remaining artifacts: ${(totalLeft / (1024*1024)).toFixed(2)} MB`);
            core.setOutput("total_left", totalLeft);
        env:
          RUN_ID: ${{ steps.latest_run.outputs.run_id }}
